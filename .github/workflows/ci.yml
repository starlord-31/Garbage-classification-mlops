name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest

    - name: Lint with flake8
      run: |
        flake8 .

    - name: Run tests with pytest
      run: |
        pytest tests/

    - name: Build Docker image
      run: |
        docker build -t garbage-classifier:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker tag garbage-classifier:latest ${{ secrets.DOCKER_USERNAME }}/garbage-classifier:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/garbage-classifier:latest

  frontend-test:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install frontend dependencies
      run: |
        cd garbage-classifier-frontend
        npm install

    - name: Run frontend tests
      run: |
        cd garbage-classifier-frontend
        npm test -- --watchAll=false
